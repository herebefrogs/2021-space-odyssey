- add CCapture.js for recording in-progress movies during development

game feature
============
- puzzle logic
[sunday]
  - randomize current song's notes on puzzle start
  - basic UI to render notes as rings
    - glow effect while a note is playing
[monday]
  - rings drag & drop
    - leads to start and end notes swap
    - mobile friendly controls
  - compare current song's notes to original on each ring reordered
    - if notes matches, move on to next puzzle
[tuesday]
  - nicer UI to render rings and planets
  - ask for feedback
- puzzles
[wednesday/thursday]
  - more tunes
    - star trek theme (short/easy)
    - star wars force (short/easy)
    - lost in Space
    - battle star galactica
    - what else?
[friday]
- coil
  - if monetization, drop a hint about the song
[saturday]
- intro screen
- end screen
  - tweet? number of ring moved?
[sunday]
- screenshots
- submit



https://shrinkme.app/?s=e <- optimize SVG paths even further
alternate splats from vectezy
<a href="https://www.vecteezy.com/free-vector/paint-splatter">Paint Splatter Vectors by Vecteezy</a>

boilerplate
===========
- key/touch press/release should be recorded outside of hero, simpler to access
  - moveLeft should be called leftKeyPressTime or whatever
- could viewportOffsets be applied one time as a translation of the VIEWPORT/MAP canvas at render time, rather than pop up in all kind of places? 
- find a cleaner way to order all the updates that need to happen
  - input to velocity
  - velocity to position
  - position to adjusted position for collision response
  - position to adjusted position to stay within map bounds (could that be done by collision or is that overkill?)
  - camera window to viewport offsets
  - updating animation/firing times and other counters <- oh good name, counters

- lerp-smoothing?
- gamepad support?
- tinyfont.js? https://github.com/darkwebdev/tinyfont.js
- support multiple voices for speech synthesis?

build chain
===========
custom:
- replace all the global variables by arguments with default value of the IIFE (e.g. const foo = 'bar' => (foo = 'bar') => { ... })
libs:
- ECT (https://github.com/fhanau/Efficient-Compression-Tool) in place of AdvZip?
  - Mac build https://github.com/fhanau/Efficient-Compression-Tool/releases/download/v0.8.3/ect-0.8.3-macOS.zip (need manual install & permission shenanigans)
  - npm package https://www.npmjs.com/package/ect-bin (but didn't seem to be available in command line afterwards... postinstall failed?)
- avif in place of png/webp (not enough browser support yet)


click handler, no memo: 1.2~1.5s
click handler, wt memo: 0.6~0.7s

main thread, no memo: 1.4~2.5s
main thread, wt memo: 0.8~1.1s