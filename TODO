- add CCapture.js for recording in-progress movies during development

game feature
============
- find a name for the game (don't put Space in it )
- [x] bullet explodes at destination
  - [x] leave a paint splat
  - [x] remove bullet from entities
  - [x] "splash" sound
- paint counter
  - [x] decrease quickly when shooting
  - [x] replenish slowly when not
  - render counter on screens
- render territory capture visually (2 colors from a set of predefined colors)
- win/loose screen (with stats of % captured)
  - font -> "impact" instead of bitmap
  - game duration (currently 60s)
- bots
  - move toward unpainted/enemy painted territory
  - fire to paint
  - fire to hurt player or bots
- hit by paint... HP? or paint counter?
- level
  - obstacles
  - ramps/different heights?
- special modes
  - replenish paint faster on owned territory
  - squid mode: move faster on owned territory (or is that replenish?)
- music during match
- music during title screens and end screens
- other weapons
  - weapon selection screen (or is that in game?)
  - paint brush (melee weapon, large splat)
  - sniper gun (low cadence, fast speed, high damage/paint splat)
- konami code for what?
- Coil for what?
- multiplayer / server category (unlikely...)
  - means lobby to find games
  - player names
  - central logic (% captured currently canvas based aka client side)


https://shrinkme.app/?s=e <- optimize SVG paths even further
alternate splats from vectezy
<a href="https://www.vecteezy.com/free-vector/paint-splatter">Paint Splatter Vectors by Vecteezy</a>

boilerplate
===========
- key/touch press/release should be recorded outside of hero, simpler to access
  - moveLeft should be called leftKeyPressTime or whatever
- could viewportOffsets be applied one time as a translation of the VIEWPORT/MAP canvas at render time, rather than pop up in all kind of places? 
- find a cleaner way to order all the updates that need to happen
  - input to velocity
  - velocity to position
  - position to adjusted position for collision response
  - position to adjusted position to stay within map bounds (could that be done by collision or is that overkill?)
  - camera window to viewport offsets
  - updating animation/firing times and other counters <- oh good name, counters

- lerp-smoothing?
- gamepad support?
- tinyfont.js? https://github.com/darkwebdev/tinyfont.js
- support multiple voices for speech synthesis?

build chain
===========
custom:
- replace all the global variables by arguments with default value of the IIFE (e.g. const foo = 'bar' => (foo = 'bar') => { ... })
libs:
- ECT (https://github.com/fhanau/Efficient-Compression-Tool) in place of AdvZip?
  - Mac build https://github.com/fhanau/Efficient-Compression-Tool/releases/download/v0.8.3/ect-0.8.3-macOS.zip (need manual install & permission shenanigans)
  - npm package https://www.npmjs.com/package/ect-bin (but didn't seem to be available in command line afterwards... postinstall failed?)
- avif in place of png/webp (not enough browser support yet)

